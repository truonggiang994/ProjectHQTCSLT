<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>