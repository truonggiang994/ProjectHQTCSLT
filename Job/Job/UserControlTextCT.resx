<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>